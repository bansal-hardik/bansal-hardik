// O(n)
class Solution {
public:
    bool isPowerOfThree(int n) {
        if(n <= 0){
            return false;
        }
        long long val = 3;
        for(int i =0;i<1000000;i++){
            val = pow(3,i);
            if(val == n)
                return true;
            if(val > n)
                break;
        }
        return false;
    }
};

// O(logn)

public class Solution {
    public boolean isPowerOfThree(int n) {
        if (n < 1) {
            return false;
        }

        while (n % 3 == 0) {
            n /= 3;
        }

        return n == 1;
    }
}

// O(log(base3)n) In Java Built In Function
public class Solution {
    public boolean isPowerOfThree(int n) {
        return Integer.toString(n, 3).matches("^10*$");
    }
}

// O(1) In Java and C++

public class Solution {
    public boolean isPowerOfThree(int n) {
        return n > 0 && 1162261467 % n == 0;
    }
}
