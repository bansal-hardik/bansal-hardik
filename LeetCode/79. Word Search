class Solution {
public:
    int n,m;
    bool exist(vector<vector<char>>& board, string word) {
        m = board.size(); n= board[0].size();
        vector<vector<bool>> visited(m,vector<bool>(n,false));
        for(int i =0;i<m;i++){
            for(int j =0 ; j< n;j++){
                if(board[i][j] == word[0] and wordcheck(board,visited,i , j ,word,0))
                    return true;
            }
        }
        return false;
    }

    bool wordcheck(vector<vector<char>>& board,vector<vector<bool>>& visited,int i ,int j , string word,int k){
        if(i < 0 || i >= m) return false;
        if(j < 0 || j >= n) return false;
        if(visited[i][j] == true) return false;
        if(board[i][j] != word[k])
            return false;
        if(k == word.size()-1) return true;
        visited[i][j] = true;
        bool check = wordcheck(board,visited,i+1 , j ,word,k+1) ||
            wordcheck(board,visited,i-1 , j ,word,k+1)||
            wordcheck(board,visited,i , j+1 ,word,k+1)||
            wordcheck(board,visited,i , j-1 ,word,k+1);
        visited[i][j] = false;
        return check;
    }
};
