
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) 
    {
        vector<int> index;
        index.push_back(-1);
        index.push_back(-1);
        for(unsigned int i = 0; i<nums.size();i++)
        {
            for(int k = i+1;k<nums.size();k++){
                if(nums[i] + nums[k] == target){
                    index[0]=i;
                    index[1]=k;
                    return index;
                }
            }
                    
        }
        return index;
    }
};
O(n)
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> m;
        for(int i=0;i<nums.size();i++){
            if(m.find(target - nums[i]) != m.end())
                return {i,m[target - nums[i]]};
            m[nums[i]]=i;
        }
        
        return {};
    }
};
