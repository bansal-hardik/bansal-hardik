class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> result;
        if(nums.size()==0){   
            result.push_back(-1);
            result.push_back(-1);
            return result;
        }
        if(nums.size()==1){
            if(nums[0]== target){
                result.push_back(0);
                result.push_back(0);
                return result;
            }
            else{
                result.push_back(-1);
                result.push_back(-1);
                return result;
            }
        }
            
        int left = 0;
        int right = nums.size()-1;
        int mid=-1;
        if(!count(nums.begin(),nums.end(),target)){
            result.push_back(-1);
            result.push_back(-1);
            return result;
        }
        else{
            while(left <= right){
                mid = (left +right)/2;
                if(nums[mid]==target){
                    int max = mid;
                    int min = mid;
                    for(int i = mid-1;i >= left;i--){
                        if(nums[i]== target){
                            min=i;
                        }
                        else{
                            break;
                        }
                    }
                    for(int i = mid+1;i <= right;i++){
                        if(nums[i]== target){
                            max=i;
                        }
                        else{
                            break;
                        }
                    }
                    result.push_back(min);
                    result.push_back(max);
                    break;
                }
                if(nums[mid]<target){
                    left=mid+1;
                }
                if(nums[mid]>target){
                    right = mid-1;
                }  
            }
        }
        return result; 
    }
};
