/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode * head1 = l1;ListNode * head2 = l2;
        if(head1 == NULL)
            return head2;
        if(head2 == NULL)
            return head1;
        ListNode * newNode =NULL;
        ListNode * head = newNode;
        int carry = 0;
        while(head1 != NULL and head2 != NULL){
            int sum = head1->val + head2->val + carry;
            carry = sum / 10;
            sum = sum % 10;
            if(head == NULL){
                newNode = new ListNode(sum);
                head = newNode;
            }
            else{
                ListNode * tmp = new ListNode(sum);
                head->next = tmp;
                head = tmp;
            }
            head1 = head1->next; head2 = head2->next;
        }
        while(head1 !=  NULL){
            int sum = head1->val + carry;
            carry = sum / 10;
            sum = sum % 10;
            ListNode * tmp = new ListNode(sum);
            head->next = tmp;
            head = tmp;
            head1 = head1->next; 
        }
        while(head2 !=  NULL){
            int sum = head2->val + carry;
            carry = sum / 10;
            sum = sum % 10;
            ListNode * tmp = new ListNode(sum);
            head->next = tmp;
            head = tmp;
            head2 = head2->next; 
        }
        if(carry == 1){
            ListNode * tmp = new ListNode(carry);
            head->next = tmp;
            head = tmp;
        }
        return newNode;
    }
};
